name: Run setup.sh on different operating systems
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '12 3 * * 5'

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_names: >-
            .bashrc
            .bash_profile
            .zshrc

  Run-setup-script-on-Ubuntu:
    name: Run setup.sh on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run setup.sh
        run: |
          echo $SHELL
          set -x
          yes 2>/dev/null | source ./setup.sh

  Run-setup-script-with-Bash-on-Mac:
    name: Run setup.sh with Bash on MacOS 14 Sonoma
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Run setup.sh with bash
        shell: bash
        run: |
          set -x
          set +e +o pipefail # ref. https://maku693.hatenablog.jp/entry/2021/01/08/220041
          yes 2>/dev/null | source ./setup.sh

  Run-setup-script-with-Zsh-on-Mac:
    name: Run setup.sh with Zsh on MacOS 14 Sonoma
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Run setup.sh with zsh
        # ref. https://zenn.dev/shundeveloper/articles/2fdf4bf627072f
        shell: zsh {0}
        run: |
          set -x
          yes 2>/dev/null | source ./setup.sh

  Run-sheldon-with-Zsh-on-Mac:
    name: Run sheldon with Zsh on MacOS 14 Sonoma
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Fetch sheldon then run
        shell: zsh {0}
        run: |
          curl --proto '=https' -fLsS https://rossmacarthur.github.io/install/crate.sh | bash -s -- --repo rossmacarthur/sheldon --to ~/.local/bin
          mkdir -p ~/.config/sheldon
          ln -svni "$(pwd)"/sheldon/plugins.toml ~/.config/sheldon/
          eval "$(~/.local/bin/sheldon source)"
          if ! tail -n+1 ~/.local/share/sheldon/plugins.lock ; then
            exit 1
          fi
          zstyle

  vim-startup-test:
    name: Vim Startup Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Vim
        run: |
          sudo apt-get update
          sudo apt-get install -y vim-nox

      - name: Run setup.sh to install plugins and config
        run: yes 2>/dev/null | source ./setup.sh

      - name: Debug Vim Installation
        run: |
          echo "--- All vim executables in PATH ---"
          which -a vim
          echo "--- vim-nox package contents ---"
          dpkg -L vim-nox
          echo "--- Full vim --version output ---"
          /usr/bin/vim.nox --version

      - name: Run Vim startup test
        run: /usr/bin/vim.nox -u ~/.vimrc --headless +'echo "Vim startup successful!"' +qall

      - name: Dump plugin versions on failure
        if: failure()
        run: |
          echo "::group::Dumping Vim plugin versions"
          for dir in ~/.vim/plugged/*; do
            if [ -d "$dir/.git" ]; then
              plugin_name=$(basename "$dir")
              echo "--- $plugin_name ---"
              (cd "$dir" && git log -1 --pretty=format:"%h | %s (%cr)")
            fi
          done
          echo "::endgroup::"
